# Speedprojekt BDF 103
# Pw_generator

import random
import string

def generate(länge):
    passwort = (string.ascii_letters + string.digits + string.punctuation).replace(":", ";")
    return ''.join(random.choice(passwort)for i in range(länge))

def passwortspeichern():
    with open("pwd.txt" , "a")as file:
        passwortliste = {}
        anbieter = input("Welchen Anbieter wollen Sie speichern")
        passwortliste[anbieter]=generate(16)
        file.write(f"{anbieter}:{generate(16)}+\n")
        print(passwortliste)
        return passwortliste

def passwoerter_anzeigen(anbieter):
    passwortliste3 = {}
    with open("pwd.txt" , "r")as file:
        for line in file:
            elemente = line.strip().split(":")
            passwortliste3[elemente[0]] = elemente[1]
        if anbieter in passwortliste3.keys():
            print(passwortliste3[anbieter])
        elif anbieter == "alle":
            print(passwortliste3)
        else:
            print("Ein solches Passwort liegt nicht vor")

def passwoert_loeschen(anbieter):
    passwortliste3 = {}
    with open("pwd.txt", "r") as file:
        for line in file:
            elemente = line.strip().split(":")
            passwortliste3[elemente[0]] = elemente[1]

        if anbieter in passwortliste3:
            passwortliste3.pop(anbieter)
            print(f"Passwort {anbieter} gelöscht")
        else:
            print("Du hast dieses Passwort nicht gespeichert")
        with open("pwd.txt", "w") as file:
            for key, value in passwortliste3.items():
                print(f"{key}:{value}")
                file.write(f"{key}:{value}\n")


def benutzeroberfläche():
    print("Herzlich Willkommen zum Passwortgenerator.\n")
    with open("master.txt", "r")as master:
        for elemente in master:
            if len(elemente) == 0:
                vergabe_passwort = int(input("Bitte vergeben Sie sich ein Passwort")).encode("utf-8")
                master.write(f"{vergabe_passwort}")
            else:
                with open("master.txt", "r")as master:
                    for element in master:
                        element.strip()
                    passworteingabe = input("Geben Sie zunächst Ihr Passwort ein").encode("utf-8")
                    if passworteingabe == element:
                        print("Herzlich Willkommen")
                        auswahl_manager= input("Pass")

def master_passwort(text, shift, zeichen_liste):
    verschluesselt = []
    for zeichen in text:
        if zeichen in zeichen_liste:
            index = zeichen_liste.index(zeichen)
            neuer_index = (index + shift) % len(zeichen_liste)
            verschluesselt.append(zeichen_liste[neuer_index])
        else:
            verschluesselt.append(zeichen)

    return "".join(verschluesselt)


def entschluesseln(verschlüsseltes_passwort,shift, zeichen_liste):
    unverschluesselt = []
    for zeichen in verschlüsseltes_passwort:
        if zeichen in zeichen_liste:
            index = zeichen_liste.index(zeichen)
            neuer_index = (index-shift)% len(zeichen_liste)
            unverschluesselt.append(zeichen_liste[neuer_index])
        else:
            unverschluesselt.append(zeichen_liste[zeichen])

    return "".join(unverschluesselt)


def verschlüsselung_definieren():
    try:
        with open("key.txt" , "r") as keyfile:
            n= keyfile.read()
    except:
        with open("key.txt", "w") as keyfile:
            aufforderung_vergabe = input("Wie lautet der Schlüssel?")
            n = aufforderung_vergabe
            keyfile.write(n)
    return n

liste_von_zeichen = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
    '!', '"', '#', '$', '%', '&', "'", '(', ')', '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', '>', '?', '@',
    '[', '\\', ']', '^', '_', '`', '{', '|', '}', '~', ' ']

schlüssel = int(verschlüsselung_definieren())
passwortlaenge = int(input("Wie lang soll das Passwort sein?"))
generate(passwortlaenge)
loeschen_anbieter = input("Lösche einen Anbieter!").lower()
passwoert_loeschen(loeschen_anbieter)

eingabe_anbieter = input("Welchen Anbieter möchtes du abrufen?").lower()
passwoerter_anzeigen(eingabe_anbieter)

if __name__ == "__main__":
